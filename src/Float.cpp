#include "Float.hpp"

namespace r64fx{

static unsigned char const table[] = {
    50,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    12, 50,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     6, 25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     3, 12, 50,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     1, 56, 25,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     0, 78, 12, 50,  0,  0,  0,  0,  0,  0,  0,  0,
     0, 39,  6, 25,  0,  0,  0,  0,  0,  0,  0,  0,
     0, 19, 53, 12, 50,  0,  0,  0,  0,  0,  0,  0,
     0,  9, 76, 56, 25,  0,  0,  0,  0,  0,  0,  0,
     0,  4, 88, 28, 12, 50,  0,  0,  0,  0,  0,  0,
     0,  2, 44, 14,  6, 25,  0,  0,  0,  0,  0,  0,
     0,  1, 22,  7,  3, 12, 50,  0,  0,  0,  0,  0,
     0,  0, 61,  3, 51, 56, 25,  0,  0,  0,  0,  0,
     0,  0, 30, 51, 75, 78, 12, 50,  0,  0,  0,  0,
     0,  0, 15, 25, 87, 89,  6, 25,  0,  0,  0,  0,
     0,  0,  7, 62, 93, 94, 53, 12, 50,  0,  0,  0,
     0,  0,  3, 81, 46, 97, 26, 56, 25,  0,  0,  0,
     0,  0,  1, 90, 73, 48, 63, 28, 12, 50,  0,  0,
     0,  0,  0, 95, 36, 74, 31, 64,  6, 25,  0,  0,
     0,  0,  0, 47, 68, 37, 15, 82,  3, 12, 50,  0,
     0,  0,  0, 23, 84, 18, 57, 91,  1, 56, 25,  0,
     0,  0,  0, 11, 92,  9, 28, 95, 50, 78, 12, 50,
     0,  0,  0,  5, 96,  4, 64, 47, 75, 39, 06, 25
};


void Float32::frac2str(unsigned int bits, char* buff, int buff_size)
{
    unsigned char sum[12] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

    for(int i=0; i<24; i++)
    {
        if(bits & (1 << (23 - i)))
        {
            for(int j=0; j<12; j++)
            {
                sum[j] += table[i*12 + j];
            }
        }

        for(int j=11; j>0; j--)
        {
            if(sum[j] >= 100)
            {
                sum[j-1] += 1;
                sum[j] -= 100;
            }
        }
    }

    int i = 0;
    int j = 0;
    for(;;)
    {
        if(j >= buff_size || i >= 12)
            break;

        buff[j] = (sum[i] / 10) + '0';
        j++;
        if(j >= buff_size)
            break;

        buff[j] = (sum[i] % 10) + '0';
        j++;
        i++;
    }
}

}//namespace r64fx
